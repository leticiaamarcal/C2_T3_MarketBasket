scale_y_continuous(labels = dollar) +
coord_flip()
category_brand_DF %>% arrange(desc(unit_price)) %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
?arrange
category_brand_DF %>% arrange(desc(unit_price)) %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar)
category_brand_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar)
category_brand_DF %>% arrange(unit_price) %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar)# +
category_brand_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_brand_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar,position = "left") +
coord_flip()
category_brand_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar,position = "right") +
coord_flip()
category_brand_DF %>%
ggplot(aes(x = category, y = arrange(unit_price))) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
str(category_brand_DF$unit_price)
category_brand_DF %>%
ggplot(aes(x = unit_price, y = category)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_brand_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(category) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_DF$category <- factor(brand_DF$category,
levels = category_relevant$category)
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
brand_DF <- Products %>%
left_join(sku_brand, by = "sku")
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order")
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity)
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_DF$category <- factor(brand_DF$category,
levels = category_relevant$category)
#classificar os fatores de mais vendas para menos vendas
brand_DF$category <- factor(brand_DF$brand,
levels = category_relevant$brand)
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_DF$category <- factor(brand_DF$brand,
levels = category_relevant$brand)
View(brand_DF)
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_DF$brand <- factor(brand_DF$brand,
levels = brand_relevant$brand)
brand_DF %>%
ggplot(aes(x = brand, y = unit_price)) + geom_boxplot()
brand_DF %>%
ggplot(aes(x = brand, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar)
#criando dataset que vamos usar
category_DF <- Products %>%
left_join(sku_category, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
#classificar os fatores de mais vendas para menos vendas
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
#criando dataset que vamos usar
category_DF <- Products %>%
left_join(sku_category, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
#boxplot - category
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_boxplot() +
coord_flip()
#classificar os fatores de mais vendas para menos vendas
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
#boxplot - category
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_boxplot() +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_boxplot()
brand_DF %>%
ggplot(aes(x = brand, y = unit_price, width = 15)) + geom_col()
brand_DF %>%
ggplot(aes(x = brand, y = unit_price, width = 15)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
library(highcharter)
install.packages(rlist)
install.packages("rlist")
library(arules)
library(arulesViz)
library(readr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(devtools)
library(StandardizeText)
library(ggplot2)
library(scales)
library(grid)
library(highcharter)
#upload arquivo
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ",")
Products <- read.csv("~/UbiqumR/C2_T3_MarketBasket/Data/Raw/lineitems_.csv", sep = ";")
Orders <- read.csv("~/UbiqumR/C2_T3_MarketBasket/Data/Raw/orders_.csv", sep = ";")
Transactions <- read.csv("~/UbiqumR/C2_T3_MarketBasket/Data/Raw/trans.csv", sep = ";")
trans_translated <- readxl::read_xlsx("Data/Raw/products_translated.xlsx")
trans_translated$price <- as.numeric(trans_translated$price)
#criando dataset que vamos usar
category_DF <- Products %>%
left_join(sku_category, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
#categorias relevantes
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
#boxplot - category
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_boxplot() +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_DF$brand <- factor(brand_DF$brand,
levels = brand_relevant$brand)
View(brand_DF)
View(brand_DF)
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_DF$brand <- factor(brand_DF$brand,
levels = brand_relevant$brand)
View(brand_DF)
View(brand_relevant)
category_DF
View(category_DF)
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
brand_relevant$brand <- factor(brand_relevant$brand,
levels = brand_relevant$brand)
brand_DF %>%
ggplot(aes(x = brand, y = unit_price)) + geom_boxplot()
View(brand_DF)
#boxplot
brand_relevant %>%
ggplot(aes(x = brand, y = unit_price)) + geom_boxplot() +
coord_flip()
#criar dataset brand
brand_DF <- Products %>%
left_join(sku_brand, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed") %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(brand = if_else(is.na(brand), "unknown",brand))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(unit_price = sum(total_price)) %>%
arrange(desc(sum))
#marcas relevantes
brand_relevant <- brand_DF%>%
group_by(brand) %>%
summarise(unit_price = sum(total_price)) %>%
arrange(desc(unit_price))
#classificar os fatores de mais vendas para menos vendas
brand_relevant$brand <- factor(brand_relevant$brand,
levels = brand_relevant$brand)
#boxplot
brand_relevant %>%
ggplot(aes(x = brand, y = unit_price)) + geom_boxplot() +
coord_flip()
brand_relevant
brand_DF
brand_DF$brand <- factor(brand_DF$brand,
levels = brand_relevant$brand)
#boxplot
brand_DF %>%
ggplot(aes(x = brand, y = unit_price)) + geom_boxplot() +
coord_flip()
brand_DF
#boxplot
brand_DF %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_boxplot() +
coord_flip()
brand_DF %>%
ggplot(aes(x = brand, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
brand_DF %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
brand_relevant
brand_relevant %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
brand_relevant %>%
head(15) %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
important_brands <- brand_relevant %>%
head(15)
important_brands %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
brand_DF
#boxplot
brand_DF %>%
filter(brand %in% important_brands$brand)
#boxplot
brand_DF %>%
filter(brand %in% important_brands$brand) %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_boxplot() +
coord_flip()
important_brands <- brand_relevant %>%
head(15)
important_brands %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) +
geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
#criando dataset que vamos usar
category_DF <- Products %>%
left_join(sku_category, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
#categorias relevantes
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
#boxplot - category
category_DF %>%
ggplot(aes(x = reorder(brand, unit_price), y = unit_price)) + geom_boxplot() +
coord_flip()
category_DF %>%
ggplot(aes(x = reorder(category, unit_price), y = unit_price)) + geom_boxplot() +
coord_flip()
category_DF %>%
ggplot(aes(x = reorder(category, unit_price), y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
#criando dataset que vamos usar
category_DF <- Products %>%
left_join(sku_category, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
#categorias relevantes
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
#classificar os fatores de mais vendas para menos vendas
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
category_DF %>%
ggplot(aes(x = reorder(category, unit_price), y = unit_price)) + geom_col()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = reorder(category, unit_price), y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = reorder(category, unit_price), y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar)
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
arrange(desc(unit_price, category)) %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
arrange(desc(unit_price)) %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF <- Products %>%
left_join(sku_category, by = "sku") %>%
left_join(Orders %>% select(state, id_order), by = "id_order") %>%
filter(state == "Completed")  %>%
mutate(total_price = unit_price * product_quantity) %>%
mutate(category = if_else(is.na(category), "unknown",category))
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(sum = sum(total_price)) %>%
arrange(desc(sum))
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
View(category_DF)
View(category_relevant)
category_relevant %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
#categorias relevantes
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(amount = sum(total_price)) %>%
arrange(desc(sum))
category_relevant <- category_DF %>%
group_by(category)
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(amount = sum(total_price))
category_relevant <- category_DF %>%
group_by(category) %>%
summarise(amount = sum(total_price)) %>%
arrange(desc(amount))
View(category_relevant)
#classificar os fatores de mais vendas para menos vendas
category_DF$category <- factor(category_DF$category,
levels = category_relevant$category)
category_relevant %>%
ggplot(aes(x = category, y = amount) + geom_col()
View(category_relevant)
category_relevant %>%
ggplot(aes(x = category, y = amount)) + geom_col() +
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_relevant %>%
ggplot(aes(x = category, y = amount)) + geom_col() +
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_relevant %>%
ggplot(aes(x = category, y = amount)) + geom_col() +
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_DF %>%
arrange(desc(unit_price)) %>%
ggplot(aes(x = category, y = unit_price)) + geom_col()+
scale_y_continuous(labels = dollar) +
coord_flip()
category_relevant %>%
ggplot(aes(x = reorder(category, amount), y = amount)) + geom_col() +
scale_y_continuous(labels = dollar) +
coord_flip()
