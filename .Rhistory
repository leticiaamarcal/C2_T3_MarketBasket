left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct()
trans
prod_brand_cat$brand_category
trans@itemInfo$labels
trans@itemInfo$labels <- prod_brand_cat$brand_category
trans_bran_category <- aggregate(trans, trans@itemInfo$labels)
rules <- apriori(trans_bran_category, parameter = list(supp = 0.02, conf = 0.6))
trans_bran_category
trans_bran_category@data
trans_bran_category <- aggregate(trans, trans@itemInfo$labels)
trans_bran_category
trans_bran_category@itemInfo
trans_bran_category@itemsetInfo
head(trans_bran_category@itemInfo)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct()
prod_brand_cat
trans@itemInfo
trans@itemInfo$labels <- prod_brand_cat$brand_category
trans@itemInfo$labels
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct()
trans@itemInfo$brand_category
prod_brand_cat$brand_category
trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct()
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
prod_brand_cat
prod_brand_cat$brand_category
prod_brand_cat$brand_category[[1]]
prod_brand_cat$brand_category[1]
prod_brand_cat$brand_category
trans@itemInfo$brand_category
trans@itemInfo$brand_category <- prod_brand_cat$brand_category
trans@itemInfo$
trans@itemInfo
trans@itemInfo$brand_category
arules::aggregate(trans, trans@itemInfo$brand_category)
trans_bran_category <- arules::aggregate(trans, trans@itemInfo$brand_category)
rules <- apriori(trans_bran_category, parameter = list(supp = 0.02, conf = 0.6))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.002, conf = 0.6))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.0025, conf = 0.6))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.00025, conf = 0.6))
ruleExplorer(rules)
rules <- apriori(trans_bran_category, parameter = list(supp = 0.025, conf = 0.5))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.02, conf = 0.5))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.02, conf = 0.4))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.002, conf = 0.4))
ruleExplorer(rules)
rules <- apriori(trans_bran_category, parameter = list(supp = 0.002, conf = 0.5))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.0002, conf = 0.5))
ruleExplorer(rules)
library(arules)
library(arulesViz)
library(readr)
library(ggplot2)
library(tidyr)
library(dplyr)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_brand_cat$brand_category
trans_bran_category <- arules::aggregate(trans, trans@itemInfo$brand_category)
rules <- apriori(trans_bran_category, parameter = list(supp = 0.001, conf = 0.6))
ruleExplorer(rules)
install.packages("shiny")
ruleExplorer(rules)
inspect(sort( rules, by = "lift"))
inspect(sort( rules, by = "support"))
inspect(sort( rules, by = "confidence"))
ItemRules <- subset(rules, items %in% "Apple_laptop")
?subset
inspect(ItemRules)
is.redundant(rules)
#plot
plot(rules)
plot(trans)
plot(sku_category)
#plot
plot(rules)
plot(rules[15], method="graph", control=list(type="items"))
plot(rules[1, 15], method="graph", control=list(type="items"))
plot(rules(15), method="graph", control=list(type="items"))
plot(rules[11], method="graph", control=list(type="items"))
library(devtools)
install.packages("desc")
library(devtools)
plot(rules, engine = "plotly")
inspectDT(rules)
ruleExplorer(rules)
View(sku_category)
View(sku_category)
View(sku_brand)
install.packages("StandardizeText)
install.packages("StandardizeText")
library(StandardizeText)
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
View(sku_pname)
product_name <- standardize.text(sku_pname, input.column = 2)
?standardize.text
standardize.text(sku_pname, input.column = 2)
sku_pname
#explore data by accessories
product_name <- standardize.text(sku_pname$name_en, input.column = 2)
#explore data by accessories
product_name <- standardize.text(sku_pname, input.column = 2)
library(StandardizeText)
sample.text <- c("blue car","STOP","email","tree")
sample.std <- c("the tree","car","e-mail","stop")
sample.df <- data.frame(foo=2:5,bar=sample.text, baz=7:4, qux=sample.std)
out.a <- standardize.text(sample.text,standard=sample.std,suggest="auto")
out.b <- standardize.text(sample.df,2,sample.df,"qux",suggest="auto")
sample.df
out.b
sample.text <- c("blue car","STOP","email","tree","email")
sample.std <- c("the tree","car","e-mail","stop")
sample.df <- data.frame(foo=2:5,bar=sample.text, baz=7:4, qux=sample.std)
out.a <- standardize.text(sample.text,standard=sample.std,suggest="auto")
out.a
sample.text <- c("macafruta", "alfaceverdura","bananafruta" )
sample.std <- c("Fruta", "Verdura")
out.a <- standardize.text(sample.text,standard=sample.std,suggest="auto")
out.a
sample.std <- c("fruta", "Verdura")
out.a <- standardize.text(sample.text,standard=sample.std,suggest="auto")
sample.text <- c("maca fruta", "alface verdura","banana fruta" )
sample.std <- c("fruta", "Verdura")
out.a <- standardize.text(sample.text,standard=sample.std,suggest="auto")
out.a
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
trans@itemInfo
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_")
View(prod_brand_cat)
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct()
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
?as_tibble
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
?filter
View(sku_category)
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku"))
View(prod_bc_noAc)
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
filter(category != "accessories")
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku"))
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku"))
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
filter(category != "accessories")
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
filter(category != "accessories") %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
filter(category != "accessories") %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_bc_noAc$brand_category
trans@itemInfo$labels
trans@itemInfo$brand_category <- prod_bc_noAc$brand_category
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_bc_noAc$brand_category
trans@itemInfo$brand_category
trans@itemInfo$brand_category <- prod_bc_noAc$brand_category
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_bc_noAc$brand_category
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
unite(col = "category_brand", category, brand, sep = "_") %>%
distinct() %>%
as_tibble()
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
unite(col = "category_brand", category, brand, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_bc_noAc$brand_category
trans@itemInfo$category_brand <- prod_bc_noAc$category_brand
trans_bc_exA <- arules::aggregate(trans, trans@itemInfo$category_brand)
View(trans_bc_exA)
trans_bc_exA@itemInfo %>% filter(category != "accessories_")
trans_bc_exA@itemInfo %>% filter(category_brand != "accessories_")
trans@itemInfo$category_brand <- prod_bc_noAc$category_brand
trans_bc <- arules::aggregate(trans, trans@itemInfo$category_brand)
trans_bc@itemInfo %>% filter(category_brand != "accessories_") -> trans_bc_exA
rules_noA <- apriori(trans_bc_exA, parameter = list(supp = 0.0003, conf = 0.6))
ruleExplorer(rules_noA)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
filter(category != "accessories") %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_bc_noAc$brand_category
View(prod_bc_noAc)
ruleExplorer(rules)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_brand_cat$brand_category
trans_bran_category <- arules::aggregate(trans, trans@itemInfo$brand_category)
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.037, conf = 0.4),
appearance = list(rhs = c("Apple_laptop")))
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.0037, conf = 0.4),
appearance = list(rhs = c("Apple_laptop")))
trans_bran_category
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.00001, conf = 0.4),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_bc_noAc <- trans@itemInfo %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
unite(col = "category_brand", category, brand, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$category_brand <- prod_bc_noAc$category_brand
trans_bc <- arules::aggregate(trans, trans@itemInfo$category_brand)
trans_bc@itemInfo %>% filter(category_brand != "accessories_") -> trans_bc_exA
rules_noA <- apriori(trans_bc_exA, parameter = list(supp = 0.0003, conf = 0.6))
ruleExplorer(rules_noA)
inStore <- read.csv("Data/Raw/trans_no_shipped.csv")
inStore <- read.csv("Data/Raw/trans_no_shipped.csv", sep = ",")
inStore <- read.csv("Data/Raw/trans_no_shipped.csv", sep = ";")
image(inStore)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ";")
View(trans)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ";")
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ";")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
library(arules)
library(arulesViz)
library(readr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(devtools)
library(StandardizeText)
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ",")
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ";")
#upload arquivo
trans <- read.transactions(file = "Data/Raw/trans.csv", sep = ";")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
sku_pname <- readxl::read_xlsx("Data/Raw/products_byname.xlsx")
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_brand_cat$brand_category
trans_bran_category <- arules::aggregate(trans, trans@itemInfo$brand_category)
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.00001, conf = 0.4),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules)
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.00001, conf = 0.4))
ruleExplorer(rules)
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.000001, conf = 0.4))
trans_bran_category <- arules::aggregate(trans, trans@itemInfo$brand_category)
rules <- apriori(trans_bran_category,
parameter = list(supp = 0.000001, conf = 0.4))
rules <- apriori(trans_bran_category, parameter = list(supp = 0.000001, conf = 0.4))
ruleExplorer(rules)
prod_brand_cat <- trans@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
trans@itemInfo$brand_category <- prod_brand_cat$brand_category
trans_bran_category <- arules::aggregate(trans, trans@itemInfo$brand_category)
rules <- apriori(trans_bran_category, parameter = list(supp = 0.000001, conf = 0.3))
ruleExplorer(rules)
inStore <- read.csv("Data/Raw/trans_no_shipped.csv", sep = ";")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ";")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ";")
#
inStore_trans <- inStore@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
inStore@itemInfo$brand_category <- inStore_trans$brand_category
inStore_transactions <- arules::aggregate(inStore, inStore@itemInfo$brand_category)
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.000001, conf = 0.3))
ruleExplorer(rules3)
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.001, conf = 0.4))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.001, conf = 0.4))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.001, conf = 0.4))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.0001, conf = 0.4))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.0001, conf = 0.2))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.0001, conf = 0.7))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.00002, conf = 0.5))
ruleExplorer(rules3)
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ",")
#
inStore_trans <- inStore@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
inStore@itemInfo$brand_category <- inStore_trans$brand_category
inStore_transactions <- arules::aggregate(inStore, inStore@itemInfo$brand_category)
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.00002, conf = 0.5))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.002, conf = 0.5))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.02, conf = 0.5))
ruleExplorer(rules3)
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.002, conf = 0.5))
rules3 <- apriori(inStore_transactions, parameter = list(supp = 0.002, conf = 0.5))
ruleExplorer(rules3)
rules3 <- apriori(inStore_transactions,
parameter = list(supp = 0.002, conf = 0.5),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules3)
rules3 <- apriori(inStore_transactions,
parameter = list(supp = 0.0002, conf = 0.5),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules3)
rules3 <- apriori(inStore_transactions,
parameter = list(supp = 0.003, conf = 0.5),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules3)
rules3 <- apriori(inStore_transactions,
parameter = list(supp = 0.0003, conf = 0.5),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules3)
library(arules)
library(arulesViz)
library(readr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(devtools)
library(StandardizeText)
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ",")
sku_brand <- read_csv2("C:/Users/letic/Documents/UbiqumR/C2_T3_MarketBasket/Data/Raw/products_with_brands.csv")
sku_category <- read_csv2("Data/Raw/products_with_category.csv")
#in Store data
inStore_trans <- inStore@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
inStore@itemInfo$brand_category <- inStore_trans$brand_category
inStore_transactions <- arules::aggregate(inStore, inStore@itemInfo$brand_category)
rules3 <- apriori(inStore_transactions,
parameter = list(supp = 0.0003, conf = 0.5),
appearance = list(rhs = c("Apple_laptop")))
ruleExplorer(rules3)
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ",")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ";")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ";")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ",")
inStore <- read.transactions("Data/Raw/trans_no_shipped.csv", sep = ",")
#in Store data
inStore_trans <- inStore@itemInfo %>%
left_join(sku_brand, by = c("labels" = "sku")) %>%
left_join(sku_category, by = c("labels" = "sku")) %>%
unite(col = "brand_category", brand, category, sep = "_") %>%
distinct() %>%
as_tibble()
inStore@itemInfo$brand_category <- inStore_trans$brand_category
inStore_transactions <- arules::aggregate(inStore, inStore@itemInfo$brand_category)
rules3 <- apriori(inStore_transactions,
parameter = list(supp = 0.0003, conf = 0.5),
appearance = list(rhs = c("Apple_laptop")))
plot(rules3)
plot(rules3, jitter = 0)
plot(rules3, jitter = 0)
plot(rules3, jitter = 0)
library(ggplot2)
hist(inStore)
ggplot(inStore)
ggplot(inStore_transactions)
#upload data
msleep <- read.csv("C:/Users/letic/Downloads/msleep_ggplot2.csv")
View(msleep)
